name: Build packages

on:
  workflow_dispatch:
  push:
    tags:
      - '*-build'

jobs:

  build-packages:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        image-name:
          - frontend

    env:
      IMAGE_NAME: ${{ matrix.image-name }}

    steps:
    - uses: actions/checkout@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Build frontend
      id: build-frontend
      if: ${{ matrix.image-name == 'frontend' }}
      run: |
        docker build \
          --file ./Dockerfile \
          --target production \
          --build-arg NODE_ENV=production \
          --tag $IMAGE_NAME \
          --tag $IMAGE_NAME:ci-run \
          ./

    - name: Push image to GitHub Container Registry
      id: push-images-container-registry
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME

        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest

        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION

        docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
