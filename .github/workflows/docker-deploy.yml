name: Build and push docker image

on:
  workflow_dispatch:
  push:
    tags:
      - 'deploy/prod/*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: prod

    strategy:
      matrix:
        image-name:
          - web

    env:
      IMAGE_NAME: ${{ matrix.image-name }}

    steps:
      - uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build web
        id: build-web
        if: ${{ matrix.image-name == 'web' }}
        run: |
          docker build \
            --file ./Dockerfile \
            --target production \
            --build-arg NODE_ENV=production \
            --tag $IMAGE_NAME \
            --tag $IMAGE_NAME:ci-run \
            .

      - name: Get the latest tag version
        id: get-version
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo $VERSION
          echo ::set-output name=VERSION::$VERSION

      - name: Push image to GitHub Container Registry
        id: push-images-container-registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=${{ steps.get-version.outputs.VERSION }}

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      - name: Start Deployment
        uses: miraclebg/docker-remote-deployment-action@v1.2
        env:
          JWT_SECRET: ${{ secrets.APP_JWT_SECRET }}
          DISCORD_CLIENT_ID: ${{ secrets.APP_DISCORD_CLIENT_ID }}
          DISCORD_CLIENT_SECRET: ${{ secrets.APP_DISCORD_CLIENT_SECRET }}
          DEPLOY_TAG: ${{ steps.get-version.outputs.VERSION }}
          HOST_IPV4_ADDRESS: '172.14.0.4'
        with:
          remote_docker_host: ${{ secrets.REMOTE_DOCKER_HOST }}
          ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          stack_file_name: docker-compose.prod.yml
          docker_login_user: ${{ secrets.GHCR_USERNAME }}
          docker_login_password: ${{ secrets.GHCR_TOKEN }}
          docker_login_registry: ghcr.io
          args: --env-file .env.prod up -d
