# https://taskfile.dev
# sudo snap install task --classic
# vscode: ext install paulvarache.vscode-taskfile

version: '3'

vars:
  GIT_COMMIT:
    sh: git log -n 1 --format=%h

tasks:
  ## Run tasks
  ############
  run-graphql:
    desc: Run local GraphQL server
    silent: true
    dir: ./graphql-gateway
    env:
      PORT: '{{default "5050" .PORT}}'
    cmds:
      - go run server.go

  run-accounts:
    desc: Run Accounts service
    silent: true
    dir: ./module-accounts
    sources:
      - ./module-accounts/server.go
    env:
      PORT: '{{default "4040" .PORT}}'
    cmds:
      - echo 'Starting accounts service...'
      - go run server.go

  ## Build tasks
  ##############
  build:
    silent: true
    desc: Build proto files to graphql
    deps:
      - build-module-campaigns
      - build-module-accounts
      - build-graphql
    cmds:
      - echo
      - echo 'Build done!'

  build-module-campaigns:
    desc: Build campaigns
    deps:
      - task: build-proto
        vars: { NAME: campaign }

  build-module-accounts:
    desc: Build accounts
    deps:
      - task: build-proto
        vars: { NAME: account }

  build-graphql:
    desc: Build graphql
    silent: true
    preconditions:
      - which go
    dir: ./graphql-gateway
    deps:
      - task: clean-graphql
        vars: { NAME: '{{.NAME}}' }
    cmds:
      - go run github.com/99designs/gqlgen
      - echo -e '[graphql] \t Regen done!'
    sources:
      - graphql-gateway/graph/schema.graphqls
    generates:
      - graphql-gateway/graph/model/models_gen.go
      - graphql-gateway/graph/schema.resolvers.go
      - graphql-gateway/graph/generated/generated.go
    method: none # checksum

  build-proto:
    desc: Build proto file
    summary: |
      Pass variable `NAME=`
      task build-proto NAME=test
    silent: true
    vars:
      NAME: '{{default "test" .NAME}}'
      PROTO_PATH: protos
    preconditions:
      - which go
      - which protoc
      - which protoc-gen-go
      - test -f {{.PROTO_PATH}}/{{.NAME}}.proto
    deps:
      - task: clean-proto
        vars: { NAME: '{{.NAME}}' }
    cmds:
      - |
        mkdir -p {graphql-gateway,module-accounts}/pb/{{.NAME}}
        protoc {{.NAME}}.proto \
          --proto_path={{.PROTO_PATH}} \
          --go_out=plugins=grpc:graphql-gateway/pb/{{.NAME}} \
          --go_out=plugins=grpc:module-accounts/pb/{{.NAME}}
      #   --csharp_out=module-campaigns/src/generated/{{.NAME}}
      - echo -e '[{{.NAME}}] \t Proto regen done!'
    sources:
      - protos/{{.NAME}}.proto
    generates:
      - graphql-gateway/pb/{{.NAME}}/{{.NAME}}.pb.go
    method: none # checksum

  ## Clean-up tasks
  #################
  clean:
    desc: Clean all generated files
    deps:
      - clean-campaigns
      - clean-accounts
      - clean-graphql

  clean-proto:
    silent: true
    cmds:
      - rm -f graphql-gateway/pb/{{.NAME}}/{{.NAME}}.pb.go
      - echo -e '[{{.NAME}}] \t Clean proto generated files done!'

  clean-campaigns:
    desc: Clean campaigns
    deps:
      - task: clean-proto
        vars: { NAME: campaign }

  clean-accounts:
    desc: Clean accounts
    deps:
      - task: clean-proto
        vars: { NAME: account }

  clean-graphql:
    silent: true
    desc: Clean graphql generated files
    cmds:
      # - rm -f graphql-gateway/graph/model/models_gen.go
      # - rm -f graphql-gateway/graph/schema.resolvers.go
      # - rm -f graphql-gateway/graph/generated/generated.go
      - echo -e '[graphql] \t Clean graphql generated files done!'
